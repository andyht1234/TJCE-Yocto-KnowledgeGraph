* Re: Integration of Docker in Read-only Rootfile system through Yocto
@ 2021-07-09 13:38 Poornesh
  0 siblings, 0 replies; 2+ messages in thread
From: Poornesh @ 2021-07-09 13:38 UTC (permalink / raw)
  To: yocto


[-- Attachment #1.1: Type: text/plain, Size: 418 bytes --]

Greetings !

I have added the docker in yocto (zeus) and it is working with the 
Rootfile system which is having "Read-write" permission. When I trying 
to run the "Hello-world" image with the Rootfile system having 
"Read-only" permission through docker  I am facing issue . Please find 
the attached error logs .

Requesting your suggestions to overcome this issue.

-- 
Thanks and Regards

Poornesh G

[-- Attachment #1.2: Type: text/html, Size: 675 bytes --]

[-- Attachment #2: docker_random_error.txt --]
[-- Type: text/plain, Size: 4028 bytes --]

root@arm:/home/ubuntu# rm -rf docker/*
root@arm:/home/ubuntu# rm -rf lib/*
root@arm:/home/ubuntu# cd
root@arm:~# 
root@arm:~# 
root@arm:~# 
root@arm:~# 
root@arm:~# docker run hello_docker
Unable to find image 'hello_docker:latest' locally
^C
root@arm:~# 
root@arm:~# 
root@arm:~# docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
root@arm:~# cd /mnt/hello_docker/
root@arm:/mnt/hello_docker# ls
Dockerfile  docker_service_error.txt  hello
root@arm:/mnt/hello_docker# docker build --tag hello_docker .
Sending build context to Docker daemon  19.46kB
Error response from daemon: stat /home/ubuntu/lib/docker/tmp: no such file or directory
root@arm:/mnt/hello_docker# systemctl stop docker
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
root@arm:/mnt/hello_docker# systemctl stop containerd
root@arm:/mnt/hello_docker# systemctl start containerd
root@arm:/mnt/hello_docker# systemctl start docker
root@arm:/mnt/hello_docker# docker build --tag hello_docker .
Sending build context to Docker daemon  19.46kB
Step 1/3 : FROM scratch
 ---> 
Step 2/3 : COPY hello /
 ---> a182b15488b7
Step 3/3 : CMD ["/hello"]
 ---> Running in 24582db80379
Removing intermediate container 24582db80379
 ---> 2d86025079d6
Successfully built 2d86025079d6
Successfully tagged hello_docker:latest
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/38f995691e86c937ef3ee7e79bc96317c36748fdc80439ce12adec.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/c9cc9246629e12cfefc50bc7e4c935a6bf980bb1b98cc8b7b7004e.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/acdd727c1a6e6f5ddef0296e9674b9abdde4c451d0bc6315d0a346.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/348ad6f90a6015d221af589c1b5517e1d7809c13c60b5a1657a20b.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/3bdf723ab02c3c338c9e058a85737ca9ecdd446cefe93c7653430d.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# docker run hello_docker
docker: Error response from daemon: OCI runtime create failed: /var/lib/docker/overlay2/c8baee3e44824671a7b1fefb9a8fe3c7ade9352f1b63162f85f046.
ERRO[0000] error waiting for container: context canceled 
root@arm:/mnt/hello_docker# systemctl stop containerd
root@arm:/mnt/hello_docker# systemctl stop docker
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
root@arm:/mnt/hello_docker# systemctl start containerd
root@arm:/mnt/hello_docker# systemctl start docker
root@arm:/mnt/hello_docker# docker run hello_docker

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (arm64v8)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

root@arm:/mnt/hello_docker#

[-- Attachment #3: docker_after_log_r.txt --]
[-- Type: text/plain, Size: 5390 bytes --]

-- Logs begin at Wed 2020-04-01 17:23:43 UTC, end at Wed 2020-04-01 17:30:52 UTC. --
Apr 01 17:25:46 arm systemd[1]: Starting Docker Application Container Engine...
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.375887000Z" level=info msg="Starting up"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.388271500Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.388373250Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.388447000Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.388494500Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.409451750Z" level=info msg="parsed scheme: \"unix\"" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.409561875Z" level=info msg="scheme \"unix\" not registered, fallback to default scheme" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.409740625Z" level=info msg="ccResolverWrapper: sending update to cc: {[{unix:///run/containerd/containerd.sock  <nil> 0 <nil>}] <nil> <nil>}" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.409798125Z" level=info msg="ClientConn switching balancer to \"pick_first\"" module=grpc
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594474500Z" level=warning msg="Your kernel does not support CPU CFS scheduler"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594595750Z" level=warning msg="Your kernel does not support CPU realtime scheduler"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594635125Z" level=warning msg="Your kernel does not support cgroup blkio weight"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594672875Z" level=warning msg="Your kernel does not support cgroup blkio weight_device"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594709125Z" level=warning msg="Your kernel does not support cgroup blkio throttle.read_bps_device"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594748125Z" level=warning msg="Your kernel does not support cgroup blkio throttle.write_bps_device"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594786875Z" level=warning msg="Your kernel does not support cgroup blkio throttle.read_iops_device"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.594829250Z" level=warning msg="Your kernel does not support cgroup blkio throttle.write_iops_device"
Apr 01 17:25:47 arm dockerd[6024]: time="2020-04-01T17:25:47.596132750Z" level=info msg="Loading containers: start."
Apr 01 17:25:48 arm dockerd[6024]: time="2020-04-01T17:25:48.211596625Z" level=warning msg="Could not load necessary modules for IPSEC rules: protocol not supported"
Apr 01 17:25:48 arm dockerd[6024]: time="2020-04-01T17:25:48.252929750Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Apr 01 17:25:48 arm dockerd[6024]: time="2020-04-01T17:25:48.661568000Z" level=info msg="Loading containers: done."
Apr 01 17:25:48 arm dockerd[6024]: time="2020-04-01T17:25:48.960145375Z" level=info msg="Docker daemon" commit=b0f5bc3 graphdriver(s)=overlay2 version=20.10.7
Apr 01 17:25:48 arm dockerd[6024]: time="2020-04-01T17:25:48.961078750Z" level=info msg="Daemon has completed initialization"
Apr 01 17:25:49 arm systemd[1]: Started Docker Application Container Engine.
Apr 01 17:25:49 arm dockerd[6024]: time="2020-04-01T17:25:49.149124500Z" level=info msg="API listen on /run/docker.sock"
Apr 01 17:30:12 arm dockerd[6024]: time="2020-04-01T17:30:12.461941250Z" level=info msg="Layer sha256:72ae7fa4acc3d0d85255b7a2c1b6edbc80f30afef047f475d9ca0f6b6eb9ade0 cleaned up"
Apr 01 17:30:24 arm dockerd[6024]: time="2020-04-01T17:30:24.569138125Z" level=info msg="No non-localhost DNS nameservers are left in resolv.conf. Using default external servers: [nameserver 8.8.8.8 nameserver 8.8.4.4]"
Apr 01 17:30:24 arm dockerd[6024]: time="2020-04-01T17:30:24.569252875Z" level=info msg="IPv6 enabled; Adding default IPv6 external servers: [nameserver 2001:4860:4860::8888 nameserver 2001:4860:4860::8844]"
Apr 01 17:30:24 arm dockerd[6024]: time="2020-04-01T17:30:24.943305375Z" level=error msg="stream copy error: reading from a closed fifo"
Apr 01 17:30:24 arm dockerd[6024]: time="2020-04-01T17:30:24.943498250Z" level=error msg="stream copy error: reading from a closed fifo"
Apr 01 17:30:25 arm dockerd[6024]: time="2020-04-01T17:30:25.087490000Z" level=error msg="2638015cfcf6f65b727f494d61e0e78a2f55d85e8c4ea8315f98bf66d056d238 cleanup: failed to delete container from containerd: no such container"
Apr 01 17:30:25 arm dockerd[6024]: time="2020-04-01T17:30:25.087663375Z" level=error msg="Handler for POST /v1.41/containers/2638015cfcf6f65b727f494d61e0e78a2f55d85e8c4ea8315f98bf66d056d238/start returned error: OCI runtime create failed: /var/lib/docker/overlay2/f260d45ba4fbc73b1fb23a013b1e69e790d2a2409a09e689982bdc71059e8a79/merged is not an absolute path or is a symlink: unknown"

^ permalink raw reply	[flat|nested] 2+ messages in thread
* Re: Integration of Docker in Read-only Rootfile system through Yocto
@ 2021-07-06 10:20 Poornesh
  0 siblings, 0 replies; 2+ messages in thread
From: Poornesh @ 2021-07-06 10:20 UTC (permalink / raw)
  To: yocto


[-- Attachment #1.1: Type: text/plain, Size: 579 bytes --]

Greetings !

I am trying to integrate Docker in Yocto. (Yocto Zeus) . I could able to 
add Docker in yocto and it is working as expected in the Rootfile system 
which is having "Read-write" permission . But in the Rootfile system 
which is having "Read-only" type the "docker.sevice" is failing .  
Please find the attachment includes service status of "docker.service" . 
Ultimately I am having a requirement of working of Docker with 
"Read-only" Rootfile system.

Kindly requesting your suggestions to over come this issue.

-- 
Thanks and Regards

Poornesh G

[-- Attachment #1.2: Type: text/html, Size: 917 bytes --]

[-- Attachment #2: readonly1.png --]
[-- Type: image/png, Size: 328653 bytes --]

[-- Attachment #3: readonly2.png --]
[-- Type: image/png, Size: 266993 bytes --]

[-- Attachment #4: status_docker.service.png --]
[-- Type: image/png, Size: 229912 bytes --]

^ permalink raw reply	[flat|nested] 2+ messages in thread
end of thread, other threads:[~2021-07-09 13:38 UTC | newest]

Thread overview: 2+ messages (download: mbox.gz / follow: Atom feed)
-- links below jump to the message on this page --
2021-07-09 13:38 Integration of Docker in Read-only Rootfile system through Yocto Poornesh
  -- strict thread matches above, loose matches on Subject: below --
2021-07-06 10:20 Poornesh

