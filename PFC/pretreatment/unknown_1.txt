Hello all,

So I have a cmake project that uses an executable generated from a cmake subproject.
My architecture is as such
├── ProjectA
├── projecta_1.0.bb ( http://projecta_1.0.bb/ )
├── files
├── ProjectA
├── CMakeLists.txt
├──  ProjectB
├── CMakeLists.txt
My recipe is a standard recipe that inherits pkgconfig cmake
The issue that occurs is that when manually building ProjectA natively it builds as expected, but when building it with yocto, during the do_compile for ProjectA, it says it is missing the executable generated by ProjectB located in /usr/bin/ProjBEXE (this executable is needed in order to compile ProjectA).

What did work is creating a projectb-native recipe that runs cmake-native, and then have projecta depend on it, but I was wondering, is there a way to have projecta_1.0.bb ( http://projecta_1.0.bb/ ) build the executable and use it within its own cmake? Perhaps making projectB a package to have projectA use it?
NOTE: I am using yocto kirkstone

[-- Attachment #2: Type: text/html, Size: 4125 bytes --]

^ permalink raw reply	[flat|nested] 3+ messages in thread