* Building for both target and host
@ 2022-08-24 12:18 Maik Vermeulen
  2022-08-24 13:01 ` [yocto] " Richard Purdie
  0 siblings, 1 reply; 5+ messages in thread
From: Maik Vermeulen @ 2022-08-24 12:18 UTC (permalink / raw)
  To: yocto

[-- Attachment #1: Type: text/plain, Size: 1243 bytes --]

Hi,

We have a recipe with a CMake project which works fine on target, but
ideally we would like to test functionality on our host systems first.
How can we also have it generate executables for the host system?

Do we need to make changes to the recipe, CMakeLists.txt, or both?
I read something about autotools, but it's completely new to me.

Any hints on what the easiest approach would be would be greatly
appreciated!

Kind regards,

Maik Vermeulen

Embedded Software Engineer — Lightyear <https://www.lightyear.one/>
+31 6 16 82 73 79 <+31616827379>

-- 
 
<https://lightyear.one/careers?utm_source=signature&utm_campaign=spotlightroles&utm_medium=email#vacancies>

-- 


Automotive Campus 70 —5708 JZ Helmond, the Netherlands
www.lightyear.one 
<https://lightyear.one/>
 <https://www.linkedin.com/company/lightyear.one/>

This email may contain information which is privileged and/or 
confidential. If you received this e-mail in error, please notify us 
immediately by e-mail and delete the email without copying or disclosing 
its contents to any other person. Lightyear is a trade name of Atlas 
Technologies B.V. and is registered at the Dutch Chamber of Commerce under 
number 67264298. 

[-- Attachment #2: Type: text/html, Size: 2518 bytes --]

^ permalink raw reply	[flat|nested] 5+ messages in thread
* Re: [yocto] Building for both target and host
  2022-08-24 12:18 Building for both target and host Maik Vermeulen
@ 2022-08-24 13:01 ` Richard Purdie
  2022-08-24 14:37   ` Maik Vermeulen
  0 siblings, 1 reply; 5+ messages in thread
From: Richard Purdie @ 2022-08-24 13:01 UTC (permalink / raw)
  To: Maik Vermeulen, yocto

On Wed, 2022-08-24 at 14:18 +0200, Maik Vermeulen wrote:
> Hi,
> 
> We have a recipe with a CMake project which works fine on target, but
> ideally we would like to test functionality on our host systems
> first.
> How can we also have it generate executables for the host system?
> 
> Do we need to make changes to the recipe, CMakeLists.txt, or both?
> I read something about autotools, but it's completely new to me.
> 
> Any hints on what the easiest approach would be would be greatly
> appreciated!

BBCLASSEXTEND = "native"

would create a variant of the recipe X as X-native which would run on
the build host. That may or may not be what you're looking for :)

Cheers,

Richard




^ permalink raw reply	[flat|nested] 5+ messages in thread
* Re: [yocto] Building for both target and host
  2022-08-24 13:01 ` [yocto] " Richard Purdie
@ 2022-08-24 14:37   ` Maik Vermeulen
  2022-08-24 14:44     ` Alexander Kanavin
  2022-08-24 14:48     ` Richard Purdie
  0 siblings, 2 replies; 5+ messages in thread
From: Maik Vermeulen @ 2022-08-24 14:37 UTC (permalink / raw)
  To: Richard Purdie; +Cc: yocto

[-- Attachment #1: Type: text/plain, Size: 1944 bytes --]

Hi Richard,

Thanks, that seems like pretty much what I need!
However, currently the recipes in the dependency chain don't all contain
'native' counterparts.
Most actually wouldn't really need to for the executable to be built.
Is there a way to neatly work around this too?

Kind regards,

Maik Vermeulen

Embedded Software Engineer — Lightyear <https://www.lightyear.one/>
+31 6 16 82 73 79 <+31616827379>


On Wed, Aug 24, 2022 at 3:01 PM Richard Purdie <
richard.purdie@linuxfoundation.org> wrote:

> On Wed, 2022-08-24 at 14:18 +0200, Maik Vermeulen wrote:
> > Hi,
> >
> > We have a recipe with a CMake project which works fine on target, but
> > ideally we would like to test functionality on our host systems
> > first.
> > How can we also have it generate executables for the host system?
> >
> > Do we need to make changes to the recipe, CMakeLists.txt, or both?
> > I read something about autotools, but it's completely new to me.
> >
> > Any hints on what the easiest approach would be would be greatly
> > appreciated!
>
> BBCLASSEXTEND = "native"
>
> would create a variant of the recipe X as X-native which would run on
> the build host. That may or may not be what you're looking for :)
>
> Cheers,
>
> Richard
>
>
>

-- 
 
<https://lightyear.one/careers?utm_source=signature&utm_campaign=spotlightroles&utm_medium=email#vacancies>

-- 


Automotive Campus 70 —5708 JZ Helmond, the Netherlands
www.lightyear.one 
<https://lightyear.one/>
 <https://www.linkedin.com/company/lightyear.one/>

This email may contain information which is privileged and/or 
confidential. If you received this e-mail in error, please notify us 
immediately by e-mail and delete the email without copying or disclosing 
its contents to any other person. Lightyear is a trade name of Atlas 
Technologies B.V. and is registered at the Dutch Chamber of Commerce under 
number 67264298. 

[-- Attachment #2: Type: text/html, Size: 3567 bytes --]

^ permalink raw reply	[flat|nested] 5+ messages in thread
* Re: [yocto] Building for both target and host
  2022-08-24 14:37   ` Maik Vermeulen
@ 2022-08-24 14:44     ` Alexander Kanavin
  2022-08-24 14:48     ` Richard Purdie
  1 sibling, 0 replies; 5+ messages in thread
From: Alexander Kanavin @ 2022-08-24 14:44 UTC (permalink / raw)
  To: Maik Vermeulen; +Cc: Richard Purdie, Yocto-mailing-list

[-- Attachment #1: Type: text/plain, Size: 3017 bytes --]

One option is to actually build an image for a qemux86_64 machine with the
items you need (or qemuarm64 if that's your build host), then use 'runqemu
kvm' to get native execution speed in a fully virtualized environment.
'native' recipes are generally meant as a springboard to get the binaries
that are needed to build target recipes, and not a way to do 'native
testing'.

Alex

On Wed, 24 Aug 2022 at 16:38, Maik Vermeulen <maik.vermeulen@lightyear.one>
wrote:

> Hi Richard,
>
> Thanks, that seems like pretty much what I need!
> However, currently the recipes in the dependency chain don't all contain
> 'native' counterparts.
> Most actually wouldn't really need to for the executable to be built.
> Is there a way to neatly work around this too?
>
> Kind regards,
>
> Maik Vermeulen
>
> Embedded Software Engineer — Lightyear <https://www.lightyear.one/>
> +31 6 16 82 73 79 <+31616827379>
>
>
> On Wed, Aug 24, 2022 at 3:01 PM Richard Purdie <
> richard.purdie@linuxfoundation.org> wrote:
>
>> On Wed, 2022-08-24 at 14:18 +0200, Maik Vermeulen wrote:
>> > Hi,
>> >
>> > We have a recipe with a CMake project which works fine on target, but
>> > ideally we would like to test functionality on our host systems
>> > first.
>> > How can we also have it generate executables for the host system?
>> >
>> > Do we need to make changes to the recipe, CMakeLists.txt, or both?
>> > I read something about autotools, but it's completely new to me.
>> >
>> > Any hints on what the easiest approach would be would be greatly
>> > appreciated!
>>
>> BBCLASSEXTEND = "native"
>>
>> would create a variant of the recipe X as X-native which would run on
>> the build host. That may or may not be what you're looking for :)
>>
>> Cheers,
>>
>> Richard
>>
>>
>>
> [image:
> https://lightyear.one/careers?utm_source=signature&utm_campaign=spotlightroles&utm_medium=email#vacancies]
> <https://lightyear.one/careers?utm_source=signature&utm_campaign=spotlightroles&utm_medium=email#vacancies>
>
>
>
>
> Automotive Campus 70 —5708 JZ Helmond, the Netherlands
> www.lightyear.one <https://lightyear.one/>
> <https://www.linkedin.com/company/lightyear.one/>
>
> This email may contain information which is privileged and/or
> confidential. If you received this e-mail in error, please notify us
> immediately by e-mail and delete the email without copying or disclosing
> its contents to any other person. Lightyear is a trade name of Atlas
> Technologies B.V. and is registered at the Dutch Chamber of Commerce under
> number 67264298.
>
> -=-=-=-=-=-=-=-=-=-=-=-
> Links: You receive all messages sent to this group.
> View/Reply Online (#57893):
> https://lists.yoctoproject.org/g/yocto/message/57893
> Mute This Topic: https://lists.yoctoproject.org/mt/93225156/1686489
> Group Owner: yocto+owner@lists.yoctoproject.org
> Unsubscribe: https://lists.yoctoproject.org/g/yocto/unsub [
> alex.kanavin@gmail.com]
> -=-=-=-=-=-=-=-=-=-=-=-
>
>

[-- Attachment #2: Type: text/html, Size: 5153 bytes --]

^ permalink raw reply	[flat|nested] 5+ messages in thread
* Re: [yocto] Building for both target and host
  2022-08-24 14:37   ` Maik Vermeulen
  2022-08-24 14:44     ` Alexander Kanavin
@ 2022-08-24 14:48     ` Richard Purdie
  1 sibling, 0 replies; 5+ messages in thread
From: Richard Purdie @ 2022-08-24 14:48 UTC (permalink / raw)
  To: Maik Vermeulen; +Cc: yocto

On Wed, 2022-08-24 at 16:37 +0200, Maik Vermeulen wrote:
> Hi Richard,
> 
> Thanks, that seems like pretty much what I need!
> However, currently the recipes in the dependency chain don't all
> contain 'native' counterparts. 
> Most actually wouldn't really need to for the executable to be
> built. 
> Is there a way to neatly work around this too?

DEPENDS = "<full set>"
DEPENDS:class-native = "<more restricted set>"

and variations of this for other kinds of variables are one
possibility. It all really depends.

Cheers,

Richard


^ permalink raw reply	[flat|nested] 5+ messages in thread
end of thread, other threads:[~2022-08-24 14:48 UTC | newest]

Thread overview: 5+ messages (download: mbox.gz / follow: Atom feed)
-- links below jump to the message on this page --
2022-08-24 12:18 Building for both target and host Maik Vermeulen
2022-08-24 13:01 ` [yocto] " Richard Purdie
2022-08-24 14:37   ` Maik Vermeulen
2022-08-24 14:44     ` Alexander Kanavin
2022-08-24 14:48     ` Richard Purdie

